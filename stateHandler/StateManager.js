const _0x4609=['847730OufpSO','type','数据库连接失败','事务提交时发生并行异常','模型生成时传入值未通过检测','253457lNlQaO','正确状态','ErrorState:\x20The\x20No\x20[','306097KenBji','事务回调结果出错','模型生成对象失败','transactionConcurrentError','事务业务逻辑执行失败','length','transactionBizLogicError','mongodbClientInitError','1POhKIp','stateInfoAdd','transactionCallbackResultError','transactionForceResetInfo','798309ztXJeI','744649pfqXHh','事务强制重置','1rSxgyN','数据库业务运行操作符值类型不是对象','modelUnableGenerateError','success','mongodbModelNameError','数据库业务逻辑执行失败','StateManager:\x20The\x20AliasName\x20[','事务SESSION分配出错','260515JoXVgo','135077FFUcde',']\x20Already\x20Exists','origin','modelValueCheckError','mongodbBizLogicError','2OUyvjf','StateManager:\x20The\x20No\x20[','2dctHNh','error','transactionAbnormalError','数据库模型名称错误','事务执行失败','mongodbOperatorNullError','info','changeInfo','stateInfoRemove','stateInfoChange'];const _0x211e=function(_0x1acbbf,_0x29fa81){_0x1acbbf=_0x1acbbf-0x161;let _0x460932=_0x4609[_0x1acbbf];return _0x460932;};const _0x214481=_0x211e;(function(_0x50a1c0,_0x4e4e23){const _0x5d49c2=_0x211e;while(!![]){try{const _0x9a54cf=parseInt(_0x5d49c2(0x17f))*-parseInt(_0x5d49c2(0x16f))+-parseInt(_0x5d49c2(0x174))*parseInt(_0x5d49c2(0x176))+parseInt(_0x5d49c2(0x164))+parseInt(_0x5d49c2(0x167))*parseInt(_0x5d49c2(0x184))+parseInt(_0x5d49c2(0x173))+-parseInt(_0x5d49c2(0x190))+-parseInt(_0x5d49c2(0x186))*-parseInt(_0x5d49c2(0x17e));if(_0x9a54cf===_0x4e4e23)break;else _0x50a1c0['push'](_0x50a1c0['shift']());}catch(_0x57a502){_0x50a1c0['push'](_0x50a1c0['shift']());}}}(_0x4609,0x6fb3e));import _0x57c78b from'../backendHandler/ConsoleHandler.js';import _0x83ed1f from'./StateInfo.js';class StateManager{constructor(){const _0x167ac1=_0x211e;this[_0x167ac1(0x16c)]=0x0;}[_0x214481(0x170)](_0x4993de,_0x36702b,_0x3275c4,_0x1c8250=null){const _0x9e97e6=_0x214481;if(this[_0x4993de]===undefined&&(_0x1c8250===null||_0x1c8250!==null&&this[_0x1c8250]===undefined)){this[_0x4993de]=new _0x83ed1f(_0x4993de,_0x36702b,_0x3275c4,_0x1c8250);if(this[_0x1c8250]!==null)this[_0x1c8250]=this[_0x4993de];this['length']++;}else this[_0x4993de]!==null?_0x57c78b['error'](_0x9e97e6(0x185)+_0x4993de+_0x9e97e6(0x180)):_0x57c78b[_0x9e97e6(0x187)](_0x9e97e6(0x17c)+_0x1c8250+']\x20Already\x20Exists');}[_0x214481(0x18f)](_0x436578,_0x6d702c,_0xd31343=null){const _0x1392e7=_0x214481;this[_0x436578]!==undefined?this[_0x436578][_0x1392e7(0x18d)](_0x6d702c,_0xd31343):_0x57c78b[_0x1392e7(0x187)](_0x1392e7(0x166)+_0x436578+']\x20Not\x20Exists');}[_0x214481(0x18e)](_0x5381e5){const _0x28716e=_0x214481;if(this[_0x5381e5]!==undefined){let _0x2bdca0=this[_0x5381e5]['aliasName'];if(_0x2bdca0!==null)delete this[_0x2bdca0];delete this[_0x5381e5],this['length']--;}else _0x57c78b['error'](_0x28716e(0x166)+_0x5381e5+']\x20Not\x20Exists');}}const stateOrigin=new StateManager();stateOrigin[_0x214481(0x170)](0xc8,_0x214481(0x165),_0x83ed1f[_0x214481(0x191)][_0x214481(0x179)],'success'),stateOrigin['stateInfoAdd'](0x3e9,_0x214481(0x161),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],'mongodbConnectionError'),stateOrigin['stateInfoAdd'](0x3ea,'数据库Client未初始化',_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x16e)),stateOrigin['stateInfoAdd'](0x3eb,_0x214481(0x17b),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x183)),stateOrigin[_0x214481(0x170)](0x3ec,_0x214481(0x189),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x17a)),stateOrigin[_0x214481(0x170)](0x3ed,'数据库业务运行操作符为空',_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x18b)),stateOrigin[_0x214481(0x170)](0x3ee,_0x214481(0x177),_0x83ed1f['type']['error'],'mongodbOperatorValueTypeError'),stateOrigin[_0x214481(0x170)](0x3ef,'数据库业务运行操作符信息对象校验失败',_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],'mongodbOperatorInfoCheckError'),stateOrigin[_0x214481(0x170)](0x3f3,_0x214481(0x169),_0x83ed1f[_0x214481(0x191)]['error'],_0x214481(0x178)),stateOrigin[_0x214481(0x170)](0x3f4,_0x214481(0x163),_0x83ed1f['type'][_0x214481(0x187)],_0x214481(0x182)),stateOrigin['stateInfoAdd'](0x44d,_0x214481(0x162),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x16a)),stateOrigin[_0x214481(0x170)](0x44e,_0x214481(0x17d),_0x83ed1f['type'][_0x214481(0x187)],'transactionSessionError'),stateOrigin[_0x214481(0x170)](0x44f,_0x214481(0x16b),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x16d)),stateOrigin[_0x214481(0x170)](0x450,_0x214481(0x168),_0x83ed1f[_0x214481(0x191)][_0x214481(0x187)],_0x214481(0x171)),stateOrigin['stateInfoAdd'](0x451,_0x214481(0x18a),_0x83ed1f['type'][_0x214481(0x187)],_0x214481(0x188)),stateOrigin['stateInfoAdd'](0x4a7,_0x214481(0x175),_0x83ed1f[_0x214481(0x191)][_0x214481(0x18c)],_0x214481(0x172)),StateManager[_0x214481(0x181)]={'success':{},'mongodbConnectionError':{},'mongodbClientInitError':{},'mongodbBizLogicError':{},'mongodbModelNameError':{},'mongodbOperatorNullError':{},'mongodbOperatorValueTypeError':{},'mongodbOperatorInfoCheckError':{},'modelUnableGenerateError':{},'modelValueCheckError':{},'transactionConcurrentError':{},'transactionSessionError':{},'transactionBizLogicError':{},'transactionCallbackResultError':{},'transactionAbnormalError':{},'transactionForceResetInfo':{}},StateManager[_0x214481(0x181)]=stateOrigin;export default StateManager;